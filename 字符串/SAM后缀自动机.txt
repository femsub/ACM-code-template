#define Len 101000
#define Alp 26
int pa[Len<<1],son[Len<<1][Alp],Right[Len<<1];
int Max[Len<<1],cnt,root,last;   //0为null节点，null只能到null
inline int Newnode(int _Max){++cnt;memset(son[cnt],0,sizeof(son[cnt]));Max[cnt]=_Max;return cnt;}
inline void pre(){cnt=Max[0]=0;root=last=Newnode(0);}
inline void SAM(int alp)        //注意T=26,s[x]-'a',多串时每次last=root
{
    int np=son[last][alp],u=last,v,nv;
    if(np&&Max[np]==Max[last]+1){last=np;return;}//已有状态，对所有父状态更新
    np=Newnode(Max[last]+1);
    Right[np]=1;
    while(u&&!son[u][alp])son[u][alp]=np,u=pa[u];
    if(!u)pa[np]=root;
    else
    {
        v=son[u][alp];
        if(Max[v]==Max[u]+1)pa[np]=v;
        else
        {
            nv=Newnode(Max[u]+1);   Right[nv]=0;
            memcpy(son[nv],son[v],sizeof(son[v]));
            pa[nv]=pa[v],pa[v]=pa[np]=nv;
            while(u&&son[u][alp]==v)son[u][alp]=nv,u=pa[u];
        }
    }
    last=np;
}

int ttopo[Len<<1],topo[Len<<1],Min[Len<<1];     //需要Right数组
void  topology(){ // 求出parent树的拓扑序,可以求right数,min[1]=0,min[x]=max[pa[x]]+1,max,但不知道right在那些位置
    int maxVal=0;
    mem(ttopo,0);
    for (int i=1;i<=cnt;i++) maxVal=max(maxVal,Max[i]),ttopo[Max[i]]++;
    for (int i=1;i<=maxVal;i++) ttopo[i]+=ttopo[i-1];
    for (int i=1;i<=cnt;i++) topo[ttopo[Max[i]]--]=i;
    for (int i=cnt;i>=1;i--)Right[pa[topo[i]]]+=Right[topo[i]],Min[topo[i]]=Max[pa[topo[i]]]+1;
    Min[1]=0;
    for (int i=1;i<=cnt;i++)printf("%d %d %d %d %d %d\n",i,ttopo[i],topo[i],Min[i],Max[i],Right[i]);
}                   //每个节点的子串个数为(MAX[x]-MIN[x]+1)*Right[x]
char SS[maxn];
int test()
{
    pre();
    int len=strlen(SS);
    for(int x=0;x<len;x++)
        SAM(SS[x]-'a');
    for(int x=0;x<=cnt;x++)
    {
        printf("%d %d %d son=\n",x,pa[x],Max[x]);
        for(int y=0;y<26;y++)
            if(son[x][y])
                printf("%c %d ",y+'a',son[x][y]);
        putchar('\n');
    }
    topology();
    return len;
}


/*
pa[x]为par指针，指向状态x表达的所有字符串的最长公共后缀所在节点 min[x]=max[pa[x]]+1;
son 为后继指针
max 表示到这个状态的字符串的最长长度
min 类似max
right(x)该状态的后缀起点集合
到状态x的字符串连续，min<=长度<=max 比如ba,bba,abba,aabba
par指针构成parent树，parent树dfs序可求出right集合
*/

**********************************************
这样可以求出每个状态的最大匹配长度,能走走，不能走返回
for(int x=cnt;x>=0;x--)sum[x]=Max[x];
    while(scanf("%s",s)!=EOF)
    {
        t=root;
        len=strlen(s);
        l=0;
        mem(d);
        for(int x=0;x<len;x++)
        {
            while(t&&son[t][s[x]-'a']==0)
            {
                t=pa[t];
                l=Max[t];
            }
            if(!t)t=root,l=0;
            else t=son[t][s[x]-'a'],l++;
            d[t]=max(d[t],l);
        }
        for(int x=cnt;x>=0;x--)
        {
            d[pa[topo[x]]]=min(Max[pa[topo[x]]],max(d[pa[topo[x]]],d[topo[x]]));
            sum[topo[x]]=min(sum[topo[x]],d[topo[x]]);
        }
    }
    int ans=0;
    for(int x=cnt;x>=0;x--)
        ans=max(ans,sum[x]);