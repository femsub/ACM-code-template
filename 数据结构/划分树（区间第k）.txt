#define N 100500
#define MID ((l+r)>>1)
const int layer=(int)(log(N)/log(2))+3;
int sot[N],t[layer][N],num[layer][N];

void Build(int c,int l,int r)
{
    int lm=MID-l+1,lp=l,rp=MID+1;
    for(int i=l;i<=MID;i++)
        lm-=sot[i]<sot[MID];
    for(int i=l;i<=r;i++)
    {
        if( i==l )
            num[c][i]=0;
        else
            num[c][i]=num[c][i-1];
        if( t[c][i]==sot[MID] )
        {
            if( lm )
            {
                lm--;
                num[c][i]++;
                t[c+1][lp++]=t[c][i];
            }
            else
                t[c+1][rp++]=t[c][i];
        }
        else if( t[c][i]<sot[MID] )
        {
            num[c][i]++;
            t[c+1][lp++]=t[c][i];
        }
        else
            t[c+1][rp++]=t[c][i];
    }
    if( l<r )
        Build(c+1,l,MID),Build(c+1,MID+1,r);
}

int Query(int c,int l,int r,int ql,int qr,int k)
{
    if( l==r )
        return t[c][l];
    int s,ss;
    if( l==ql )
        s=0,ss=num[c][qr];
    else
        s=num[c][ql-1],ss=num[c][qr]-num[c][ql-1];
    if( k<=ss )
        return Query(c+1,l,MID,l+s,l+s+ss-1,k);
    else
        return Query(c+1,MID+1,r,MID+1+ql-l-s,MID+1+qr-l-s-ss,k-ss);
}



logn求query
须判k是否超界
t[0][i]存原值
sot[i]=t[0][i];
sort(sot+1,sot+1+n);
Build(0,1,n);
Query(0,1,n,l,r,k)