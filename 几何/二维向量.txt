struct point3{
        double x,y,z;
        point3(){x=y=z=0;}
        point3(double x,double y,double z){this->x=x;this->y=y;this->z=z;}
        point3 operator*(const double &a){return point3(a*x,a*y,a*z);}
        point3 operator^(const point3 &a){return point3(y*a.z-z*a.y,z*a.x-x*a.z,x*a.y-y*a.x);}
        point3 operator/(const double &a){return point3(x/a,y/a,z/a);}
        double operator*(const point3 &a){return a.x*x+a.y*y+a.z*z;}
        point3 operator+(const point3 &a){return point3(x+a.x,y+a.y,z+a.z);}
        point3 operator-(const point3 &a){return point3(x-a.x,y-a.y,z-a.z);}
        void get(){scanf("%lf%lf%lf",&x,&y,&z);}
};
point3 operator*(double const &a,point3 const &b){return point3(a*b.x,a*b.y,a*b.z);}
double dis(point3 a){return sqrt(a.x*a.x+a.y*a.y+a.z*a.z);}
void pr(point3 a){printf("%.2f %.2f %.2f\n",a.x,a.y,a.z);}

*******************************

struct point{
        double x,y;
        point(){x=y=0;}
        point(double x,double y){this->x=x;this->y=y;}
        point operator*(const double &a){return point(a*x,a*y);}
        double operator^(const point &a){return x*a.y-y*a.x;}
        point operator/(const double &a){return point(x/a,y/a);}
        double operator*(const point &a){return a.x*x+a.y*y;}
        point operator+(const point &a){return point(x+a.x,y+a.y);}
        point operator-(const point &a){return point(x-a.x,y-a.y);}
        bool operator<(const point &a)const{return x<a.x-esp||(abs(x-a.x)<esp&&y<a.y-esp);}
        void get(){scanf("%lf%lf",&x,&y);}
};
point operator*(double const &a,point const &b){return point(a*b.x,a*b.y);}
double dis(point a){return sqrt(a.x*a.x+a.y*a.y);}
void pr(point a){printf("%.2f %.2f\n",a.x,a.y);}