int fa[n];
struct edge
{
        int u;
        int v;
        int w;
        bool operator<(const edge e)
        {
                return w<e.w;
        };
};
int get_father(int u)
{
        if(u==fa[u])
                return u;
        fa[u]=get_father(fa[u]);
        return fa[u];
}
void link(int u,int v)
{
        fa[get_father(u)]=get_father(v);
}
int kruskal()
{
        int sum=0,num=0,u,v;
        sort(edges,edges+e);
        for(int i=0;i<m;i++)
        {
                u=edges[i].u;
                v=edges[i].v;
                if(get_father(u)!=get_father(v))
                {
                        add(edges[i]);//加入结果
                        sum+=edges[i].w;
                        num++;
                        link(u,v);
                }
                if(num>=n-1)
                        break;
        }
        return sum;
}