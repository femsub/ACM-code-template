
int m1[1100][1100];//1-k
int m2[1100][1100];//u,v
int dfn[1100];
int low[1100];
int len=0,ans=INT_MAX;
void dfs(int i,int fa)
{
    int j;
    dfn[i]=low[i]=++len;
    for(int x=1;x<=m1[i][0];x++)
    {
        j=m1[i][x];
        if(j==fa)
                continue;
        if (!dfn[j])
        {
            dfs(j,i);
            low[i]=min(low[i],low[j]);
            //if (low[j]>dfn[i])   >=割点
            //    ans=min(ans,m2[j][i]);//桥的最小值
        }
        else
            low[i]=min(dfn[j],low[i]);
    }
}



                        scanf("%d%d%d",&u,&v,&w);
                        if(m2[u][v]!=0)
                        {
                                m2[u][v]=INT_MAX;
                                m2[v][u]=INT_MAX;
                                continue;
                        }
                        m1[u][0]++;
                        m1[v][0]++;
                        m1[u][m1[u][0]]=v;
                        m1[v][m1[v][0]]=u;
                        m2[u][v]=w;
                        m2[v][u]=w;

                ans=INT_MAX;
                dfs(1,-1);
                if(ans==INT_MAX)
                        ans=-1;
                int flag=0;
                for(int x=1;x<=n;x++)
                        if(dfn[x]==0)
                {
                        printf("%d\n",0);
                        flag=1;
                        break;
                }

