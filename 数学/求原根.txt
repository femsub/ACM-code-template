***************************
				p奇素数
LL mu(LL a,LL b,LL p)
{
    LL ans=1;
    while(b)
    {
        if(b & 1)
            ans*=a;
        if(ans>=p)ans%=p;
        b >>= 1;
        a*=a;
        if(a>=p)a%=p;
    }
    return ans;
}

inline LL findRoot(LL p)   //p是奇素数
{
    LL sign,t;

    for(LL i = 1; i < p; ++i)
    {
        if(mu(i, p - 1, p) == 1ll)
        {
            t=p-1;
            sign = 1;
            for(LL j = 2; j*j <= t; ++j)
                if(t% j == 0)
                {
                    if(mu(i, (p - 1) / j, p) == 1)
                    {
                        sign = 0;
                        break;
                    }
                    while(t%j==0)t/=j;
                }
            if(t>1&&mu(i, (p - 1) / t, p) == 1)sign=0;
            if(sign)return i;
        }
    }
}
***************************************任意p
LL mod_mul(LL a, LL b, LL n) {
    LL res = 0;
    while(b) {
        if(b&1)
            res+=a;
        if(res>=n)res-=n;
        a +=a;
        if(a>=n)a-=n;
        b >>= 1;
    }
    return res;
}
LL mod_exp(LL a, LL b, LL n) {
    LL res = 1;
    while(b) {
        if(b&1)
            res = mod_mul(res, a, n);
        a = mod_mul(a, a, n);
        b >>= 1;
    }
    return res;
}
bool miLLer_rabin(LL n,int S) {
    if(n == 2 || n == 3 || n == 5 || n == 7 || n == 11)    return true;
    if(n == 1 || !(n%2) || !(n%3) || !(n%5) || !(n%7) || !(n%11))    return false;

    LL x, pre, u;
    int i, j, k = 0;
    u = n - 1;

    while(!(u&1)) {
        k++; u >>= 1;
    }

    srand((LL)time(0));
    for(i = 0; i < S; ++i) {
        x = rand()%(n-2) + 2;
        if((x%n) == 0)    continue;

        x = mod_exp(x, u, n);
        pre = x;
        for(j = 0; j < k; ++j) {
            x = mod_mul(x, x, n);
            if(x == 1 && pre != 1 && pre != n-1)    return false;
            pre = x;
        }
        if(x != 1)    return false;
    }
    return true;
}
LL euler(LL n){ //返回euler(n)
        LL res=n,a=n;
        for(LL i=2;i*i<=a;i++){
            if(a%i==0){
                res=res/i*(i-1);//先进行除法是为了防止中间数据的溢出
                while(a%i==0) a/=i;
            }
        }
        if(a>1) res=res/a*(a-1);
        return res;
    }
int check(LL p)
{
    if(p==2||p==4)return 1;
    if(p%2==0)p/=2;
    LL d;
    for(LL x=1;x<=p;x++)
    {
        d=floor(pow(p,1.0/x));
        if(d>=3&&miLLer_rabin(d,4)&&mod_exp(d,x,1000000007ll)==p%1000000007ll&&mod_exp(d,x,1000000009ll)==p%1000000009ll)
            return 1;
        d++;
        if(d>=3&&miLLer_rabin(d,4)&&mod_exp(d,x,1000000007ll)==p%1000000007ll&&mod_exp(d,x,1000000009ll)==p%1000000009ll)
            return 1;
        if(d<=2)return 0;
    }
    return 0;
}
inline LL findRoot(LL p)        //-1无解
{
    LL sign,t,phi;
    if(miLLer_rabin(p,4)==1)
        phi=p-1;
    else
    {
        phi=euler(p);
        if(check(p)==0)return -1;
    }
    for(LL i = 1; i < p; ++i)
    {
        if(mod_exp(i, phi, p) == 1ll)
        {
            t=phi;
            sign = 1;
            for(LL j = 2; j*j <= t; ++j)
                if(t% j == 0)
                {
                    if(mod_exp(i, phi / j, p) == 1)
                    {
                        sign = 0;
                        break;
                    }
                    while(t%j==0)t/=j;
                }
            if(t>1&&mod_exp(i, phi / t, p) == 1)sign=0;
            if(sign)return i;
        }
    }
}