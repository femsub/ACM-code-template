//LL mod_mul(LL a, LL b, LL n) {
//    LL res = 0;
//    while(b) {
//        if(b&1)
//            res+=a;
//        if(res>=n)res-=n;
//        a +=a;
//        if(a>=n)a-=n;
//        b >>= 1;
//    }
//    return res;
//}
LL mod_exp(LL a, LL b, LL n) {
    LL res = 1;
    while(b) {
        if(b&1)
            //res = mod_mul(res, a, n);
            res=res*a%n;
        //a = mod_mul(a, a, n);
        a=a*a%n;
        b >>= 1;
    }
    return res;
}
bool miLLer_rabin(LL n) {			//1e9
									//1e18 2,325,9375,28178,450775,9780504,1795265022
	if(n == 2 || n == 3 || n == 5 || n == 7 )    return true;
    if(n == 1 || !(n%2) || !(n%3) || !(n%5) || !(n%7) )    return false;
    LL x, pre, u;
    int i, j, k = 0;
    u = n - 1;

    while(!(u&1)) {
        k++; u >>= 1;
    }

    static const LL test[2]={336781006125ll,9639812373923155ll};
    for(i = 0; i < 2; ++i) {
        x = test[i]%n;
        if(x == 0)    continue;

        x = mod_exp(x, u, n);
        pre = x;
        for(j = 0; j < k; ++j) {
            //x = mod_mul(x, x, n); //1e18
            x=x*x%n;
            if(x == 1 && pre != 1 && pre != n-1)    return false;
            pre = x;
        }
        if(x != 1)    return false;
    }
    return true;
}


const int maxp = 120;
LL ct, cnt;
LL fac[maxp], num[maxp];

LL pollard_rho(LL n, LL c)
{
    LL i = 1, k = 2;
    LL x = rand() % (n - 1) + 1;
    LL y = x;
    while(true)
    {
        i++;
        //x = (mod_mul(x, x, n) + c) % n;
        x = (x*x%n + c) % n;
        LL d = __gcd((y - x + n) % n, n);
        if(1 < d && d < n) return d;
        if(y == x) return n;
        if(i == k)
        {
            y = x;
            k <<= 1;
        }
    }
}

void find(LL n, int c)
{
    if(n == 1) return;
    if(miLLer_rabin(n))
    {
        fac[ct++] = n;
        return ;
    }
    LL p = n;
    LL k = c;
    while(p >= n) p = pollard_rho(p, c--);
    find(p, k);
    find(n / p, k);
}
void work(LL n)             //1时输出0^1
{
    ct = 0;
    find(n, 120);
    sort(fac, fac + ct);
    num[0] = 1;
    int k = 1;
    for(int i=1; i<ct; i++)
    {
        if(fac[i] == fac[i-1])
            ++num[k-1];
        else
        {
            num[k] = 1;
            fac[k++] = fac[i];
        }
    }
    cnt = k;
    for(int i=0; i<cnt; i++)
        cout<<fac[i]<<"^"<<num[i]<<" ";
    cout<<endl;
}