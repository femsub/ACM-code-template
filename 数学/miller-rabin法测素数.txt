//LL mod_mul(LL a, LL b, LL n) {
//    LL res = 0;
//    while(b) {
//        if(b&1)
//            res+=a;
//        if(res>=n)res-=n;
//        a +=a;
//        if(a>=n)a-=n;
//        b >>= 1;
//    }
//    return res;
//}
LL mod_exp(LL a, LL b, LL n) {
    LL res = 1;
    while(b) {
        if(b&1)
            //res = mod_mul(res, a, n);
            res=res*a%n;
        //a = mod_mul(a, a, n);
        a=a*a%n;
        b >>= 1;
    }
    return res;
}
bool miLLer_rabin(LL n) {			//1e9
									//1e18 2,325,9375,28178,450775,9780504,1795265022
	if(n == 2 || n == 3 || n == 5 || n == 7 )    return true;
    if(n == 1 || !(n%2) || !(n%3) || !(n%5) || !(n%7) )    return false;
    LL x, pre, u;
    int i, j, k = 0;
    u = n - 1;

    while(!(u&1)) {
        k++; u >>= 1;
    }

    static const LL test[2]={336781006125ll,9639812373923155ll};
    for(i = 0; i < 2; ++i) {
        x = test[i]%n;
        if(x == 0)    continue;

        x = mod_exp(x, u, n);
        pre = x;
        for(j = 0; j < k; ++j) {
            //x = mod_mul(x, x, n); //1e18
            x=x*x%n;
            if(x == 1 && pre != 1 && pre != n-1)    return false;
            pre = x;
        }
        if(x != 1)    return false;
    }
    return true;
}