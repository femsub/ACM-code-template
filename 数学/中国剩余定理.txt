void extend_gcd (LL a , LL b , LL& d, LL &x , LL &y) {
	if(!b){d = a; x = 1; y = 0;}
	else {extend_gcd(b, a%b, d, y, x); y-=x*(a/b);}
}
LL china(LL l, LL r, LL *m, LL *a){ //下标[l,r] 方程x%m=a;      ,m a数组会变
	LL lcm = 1;
	for(LL i = l; i <= r; i++)lcm = lcm/__gcd(lcm,m[i])*m[i];
	for(LL i = l+1; i <= r; i++) {
		LL A = m[l], B = m[i], d, x, y, c = a[i]-a[l];
		extend_gcd(A,B,d,x,y);
		if(c%d)return -1;
		LL mod = m[i]/d;
		LL K = ((x*c/d)%mod+mod)%mod;
		a[l] = m[l]*K + a[l];
		m[l] = m[l]*m[i]/d;
	}
	if(a[l]==0)return lcm;
	return a[l];
}
****************************************************

m互质

void gcd(LL a,LL b,LL &d,LL &x,LL &y)
{
        if(!b){d=a;x=1;y=0;}
        else{gcd(b,a%b,d,y,x);y-=x*(a/b);}
}
LL mc(LL a,LL b,LL mod)
{
    LL ans=0;
    if(b<0){a=-a;b=-b;}
    while(b)
    {
        if((b & 1) && (ans += a) >= mod)
            ans -= mod;
        b >>= 1;
        if((a <<= 1) >= mod)
            a -= mod;
    }
    return ans;
}
LL china(long long int n,long long int*a,long long int *m)
{
        LL M=1,d,y,x=0;
        for(int i=0;i<n;i++)M*=m[i];
        for(int i=0;i<n;i++)
        {
                LL w=M/m[i];
                gcd(m[i],w,d,d,y);
                x=(x+mc(mc(y,w,M),a[i],M))%M;
        }
        return (x+M)%M;
}

x=a[i]  %m[i]


